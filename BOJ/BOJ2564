import java.io.*;
import java.util.*;

public class Main {
	static int width, height;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		width = Integer.parseInt(st.nextToken());
		height = Integer.parseInt(st.nextToken());

		int N = Integer.parseInt(br.readLine());
		int[][] stores = new int[N][2];
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			stores[i][0] = Integer.parseInt(st.nextToken());
			stores[i][1] = Integer.parseInt(st.nextToken());
		}

		int[] dong = new int[2];
		st = new StringTokenizer(br.readLine(), " ");
		dong[0] = Integer.parseInt(st.nextToken());
		dong[1] = Integer.parseInt(st.nextToken());

		int[] result = new int[N];
		int sum = 0;
		for (int i = 0; i < N; i++) {
			if(dong[0] == stores[i][0]) {
				result[i] = Math.abs(dong[1] - stores[i][1]);
			}else if(dong[0] + stores[i][0] == 3) {
				result[i] = Math.min(height + dong[1] + stores[i][1], height + 2 * width - dong[1] - stores[i][1]);
			}else if(dong[0] + stores[i][0] == 7) {
				result[i] = Math.min(width + dong[1] + stores[i][1], width + 2 * height - dong[1] - stores[i][1]);
			}else {
				int cha = Math.abs(dong[0] - stores[i][0]);
				switch(cha) {
				case 1:
					if(dong[0]==3)
						result[i] = height - dong[1] + stores[i][1];
					else
						result[i] = height - stores[i][1] + dong[1];
					break;
				case 2:
					switch(dong[0]) {
					case 1:
						if(stores[i][0] == 3)
							result[i] = dong[1] + stores[i][1];
						else
							result[i] = width - dong[1] + stores[i][1];
						break;
					case 2:
						if(stores[i][0] == 3)
							result[i] = dong[1] + height - stores[i][1];
						else
							result[i] = width - dong[1] + height - stores[i][1];
						break;
					case 3:
						if(stores[i][0] == 1)
							result[i] = dong[1] + stores[i][1];
						else
							result[i] = height - dong[1] + stores[i][1];
						break;
					case 4 :
						if(stores[i][0] == 1)
							result[i] = width - stores[i][1] + dong[1];
						else
							result[i] = width - stores[i][1] + height - dong[1];
						break;
					}
					break;
				case 3:
					if(dong[0] == 1)
						result[i] = width - dong[1] + stores[i][1];
					else
						result[i] = dong[1] + width - stores[i][1];
					break;
				}
			}
			sum += result[i];
		}
    System.out.println(sum);

		br.close();
	}
}
